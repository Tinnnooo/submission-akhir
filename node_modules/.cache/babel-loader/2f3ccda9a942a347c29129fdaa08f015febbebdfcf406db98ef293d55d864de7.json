{"ast":null,"code":"import { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport api from '../../utils/api';\nconst ActionType = {\n  SET_AUTH_USER: 'SET_AUTH_USER',\n  UNSET_AUTH_USER: 'UNSET_AUTH_USER'\n};\nfunction setAuthUserActionCreator(authUser) {\n  return {\n    type: ActionType.SET_AUTH_USER,\n    payload: {\n      authUser\n    }\n  };\n}\nfunction unsetAuthUserActionCreator() {\n  return {\n    type: ActionType.UNSET_AUTH_USER,\n    payload: {\n      authUser: null\n    }\n  };\n}\nfunction asyncSetAuthUser(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    dispatch(showLoading());\n    try {\n      const token = await api.login({\n        email,\n        password\n      });\n      api.putAccessToken(token);\n      const authUser = await api.getOwnProfile();\n      dispatch(setAuthUserActionCreator(authUser));\n    } catch (error) {\n      alert(error.message);\n    }\n    dispatch(hideLoading());\n  };\n}\nfunction asyncUnsetAuthUser() {\n  return dispatch => {\n    dispatch(unsetAuthUserActionCreator());\n    api.putAccessToken('');\n  };\n}\nexport { ActionType, setAuthUserActionCreator, unsetAuthUserActionCreator, asyncSetAuthUser, asyncUnsetAuthUser };","map":{"version":3,"names":["hideLoading","showLoading","api","ActionType","SET_AUTH_USER","UNSET_AUTH_USER","setAuthUserActionCreator","authUser","type","payload","unsetAuthUserActionCreator","asyncSetAuthUser","email","password","dispatch","token","login","putAccessToken","getOwnProfile","error","alert","message","asyncUnsetAuthUser"],"sources":["C:/Users/Tin/redux/src/states/authUser/action.js"],"sourcesContent":["import { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport api from '../../utils/api';\r\n\r\nconst ActionType = {\r\n  SET_AUTH_USER: 'SET_AUTH_USER',\r\n  UNSET_AUTH_USER: 'UNSET_AUTH_USER',\r\n};\r\n\r\nfunction setAuthUserActionCreator(authUser) {\r\n  return {\r\n    type: ActionType.SET_AUTH_USER,\r\n    payload: {\r\n      authUser,\r\n    },\r\n  };\r\n}\r\n\r\nfunction unsetAuthUserActionCreator() {\r\n  return {\r\n    type: ActionType.UNSET_AUTH_USER,\r\n    payload: {\r\n      authUser: null,\r\n    },\r\n  };\r\n}\r\n\r\nfunction asyncSetAuthUser({ email, password }) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoading());\r\n    try {\r\n      const token = await api.login({ email, password });\r\n      api.putAccessToken(token);\r\n      const authUser = await api.getOwnProfile();\r\n\r\n      dispatch(setAuthUserActionCreator(authUser));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n    dispatch(hideLoading());\r\n  };\r\n}\r\n\r\nfunction asyncUnsetAuthUser() {\r\n  return (dispatch) => {\r\n    dispatch(unsetAuthUserActionCreator());\r\n    api.putAccessToken('');\r\n  };\r\n}\r\n\r\nexport {\r\n  ActionType,\r\n  setAuthUserActionCreator,\r\n  unsetAuthUserActionCreator,\r\n  asyncSetAuthUser,\r\n  asyncUnsetAuthUser,\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAClE,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,UAAU,GAAG;EACjBC,aAAa,EAAE,eAAe;EAC9BC,eAAe,EAAE;AACnB,CAAC;AAED,SAASC,wBAAwB,CAACC,QAAQ,EAAE;EAC1C,OAAO;IACLC,IAAI,EAAEL,UAAU,CAACC,aAAa;IAC9BK,OAAO,EAAE;MACPF;IACF;EACF,CAAC;AACH;AAEA,SAASG,0BAA0B,GAAG;EACpC,OAAO;IACLF,IAAI,EAAEL,UAAU,CAACE,eAAe;IAChCI,OAAO,EAAE;MACPF,QAAQ,EAAE;IACZ;EACF,CAAC;AACH;AAEA,SAASI,gBAAgB,OAAsB;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAC3C,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACb,WAAW,EAAE,CAAC;IACvB,IAAI;MACF,MAAMc,KAAK,GAAG,MAAMb,GAAG,CAACc,KAAK,CAAC;QAAEJ,KAAK;QAAEC;MAAS,CAAC,CAAC;MAClDX,GAAG,CAACe,cAAc,CAACF,KAAK,CAAC;MACzB,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACgB,aAAa,EAAE;MAE1CJ,QAAQ,CAACR,wBAAwB,CAACC,QAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB;IACAP,QAAQ,CAACd,WAAW,EAAE,CAAC;EACzB,CAAC;AACH;AAEA,SAASsB,kBAAkB,GAAG;EAC5B,OAAQR,QAAQ,IAAK;IACnBA,QAAQ,CAACJ,0BAA0B,EAAE,CAAC;IACtCR,GAAG,CAACe,cAAc,CAAC,EAAE,CAAC;EACxB,CAAC;AACH;AAEA,SACEd,UAAU,EACVG,wBAAwB,EACxBI,0BAA0B,EAC1BC,gBAAgB,EAChBW,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}