{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tin\\\\redux\\\\src\\\\components\\\\ThreadCommentList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ThreadCommentItem, { threadCommentItemShape } from './ThreadCommentItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreadCommentList(_ref) {\n  let {\n    comments\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: `Comments (${comments.length})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), comments.length > 0 ? comments.map(comment => /*#__PURE__*/_jsxDEV(ThreadCommentItem, {\n        ...comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"- No Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ThreadCommentList;\nThreadCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape(threadCommentItemShape)).isRequired\n};\nexport default ThreadCommentList;\nvar _c;\n$RefreshReg$(_c, \"ThreadCommentList\");","map":{"version":3,"names":["React","PropTypes","ThreadCommentItem","threadCommentItemShape","ThreadCommentList","comments","length","map","comment","id","propTypes","arrayOf","shape","isRequired"],"sources":["C:/Users/Tin/redux/src/components/ThreadCommentList.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ThreadCommentItem, { threadCommentItemShape } from './ThreadCommentItem';\r\n\r\nfunction ThreadCommentList({ comments }) {\r\n  return (\r\n    <section>\r\n      <div>\r\n        <h4>{`Comments (${comments.length})`}</h4>\r\n        {comments.length > 0 ? (\r\n          comments.map((comment) => (\r\n            <ThreadCommentItem key={comment.id} {...comment} />\r\n          ))\r\n        ) : (\r\n          <div>- No Comment</div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nThreadCommentList.propTypes = {\r\n  comments: PropTypes.arrayOf(PropTypes.shape(threadCommentItemShape)).isRequired,\r\n};\r\n\r\nexport default ThreadCommentList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,iBAAiB,IAAIC,sBAAsB,QAAQ,qBAAqB;AAAC;AAEhF,SAASC,iBAAiB,OAAe;EAAA,IAAd;IAAEC;EAAS,CAAC;EACrC,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,UAAM,aAAYA,QAAQ,CAACC,MAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAM,EACzCD,QAAQ,CAACC,MAAM,GAAG,CAAC,GAClBD,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACnB,QAAC,iBAAiB;QAAA,GAAsBA;MAAO,GAAvBA,OAAO,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QACnC,CAAC,gBAEF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,KAfQL,iBAAiB;AAiB1BA,iBAAiB,CAACM,SAAS,GAAG;EAC5BL,QAAQ,EAAEJ,SAAS,CAACU,OAAO,CAACV,SAAS,CAACW,KAAK,CAACT,sBAAsB,CAAC,CAAC,CAACU;AACvE,CAAC;AAED,eAAeT,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}