{"ast":null,"code":"import { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport api from '../../utils/api';\nconst ActionType = {\n  RECEIVE_THREADS: 'RECEIVE_THREADS',\n  ADD_THREAD: 'ADD_THREAD',\n  TOGGLE_VOTE_THREAD: 'TOGGLE_VOTE_THREAD'\n};\nfunction receiveThreadsActionCreator(threads) {\n  return {\n    type: ActionType.RECEIVE_THREADS,\n    payload: {\n      threads\n    }\n  };\n}\nfunction addThreadActionCreator(thread) {\n  return {\n    type: ActionType.ADD_THREAD,\n    payload: {\n      thread\n    }\n  };\n}\nfunction toggleVoteThreadActionCreator(_ref) {\n  let {\n    threadId,\n    userId\n  } = _ref;\n  return {\n    type: ActionType.TOGGLE_VOTE_THREAD,\n    payload: {\n      threadId,\n      userId\n    }\n  };\n}\nfunction asyncAddThread(_ref2) {\n  let {\n    title,\n    body\n  } = _ref2;\n  return async dispatch => {\n    dispatch(showLoading());\n    try {\n      const thread = await api.createThread({\n        title,\n        body\n      });\n      dispatch(addThreadActionCreator(thread));\n    } catch (error) {\n      alert(error.messagge);\n    }\n    dispatch(hideLoading());\n  };\n}\nfunction asyncToggleVoteThread(threadId) {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    const {\n      authUser\n    } = getState();\n    dispatch(toggleVoteThreadActionCreator({\n      threadId,\n      userId: authUser.id\n    }));\n    try {\n      await api.toggleVoteThread(threadId);\n    } catch (error) {\n      alert(error.messagge);\n      dispatch(toggleVoteThreadActionCreator({\n        threadId,\n        userId: authUser.id\n      }));\n    }\n    dispatch(hideLoading());\n  };\n}\nexport { ActionType, receiveThreadsActionCreator, addThreadActionCreator, toggleVoteThreadActionCreator, asyncAddThread, asyncToggleVoteThread };","map":{"version":3,"names":["hideLoading","showLoading","api","ActionType","RECEIVE_THREADS","ADD_THREAD","TOGGLE_VOTE_THREAD","receiveThreadsActionCreator","threads","type","payload","addThreadActionCreator","thread","toggleVoteThreadActionCreator","threadId","userId","asyncAddThread","title","body","dispatch","createThread","error","alert","messagge","asyncToggleVoteThread","getState","authUser","id","toggleVoteThread"],"sources":["C:/Users/Tin/redux/src/states/threads/action.js"],"sourcesContent":["import { hideLoading, showLoading } from 'react-redux-loading-bar';\r\nimport api from '../../utils/api';\r\n\r\nconst ActionType = {\r\n  RECEIVE_THREADS: 'RECEIVE_THREADS',\r\n  ADD_THREAD: 'ADD_THREAD',\r\n  TOGGLE_VOTE_THREAD: 'TOGGLE_VOTE_THREAD',\r\n};\r\n\r\nfunction receiveThreadsActionCreator(threads) {\r\n  return {\r\n    type: ActionType.RECEIVE_THREADS,\r\n    payload: {\r\n      threads,\r\n    },\r\n  };\r\n}\r\n\r\nfunction addThreadActionCreator(thread) {\r\n  return {\r\n    type: ActionType.ADD_THREAD,\r\n    payload: {\r\n      thread,\r\n    },\r\n  };\r\n}\r\n\r\nfunction toggleVoteThreadActionCreator({ threadId, userId }) {\r\n  return {\r\n    type: ActionType.TOGGLE_VOTE_THREAD,\r\n    payload: {\r\n      threadId,\r\n      userId,\r\n    },\r\n  };\r\n}\r\n\r\nfunction asyncAddThread({ title, body }) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoading());\r\n    try {\r\n      const thread = await api.createThread({ title, body });\r\n      dispatch(addThreadActionCreator(thread));\r\n    } catch (error) {\r\n      alert(error.messagge);\r\n    }\r\n    dispatch(hideLoading());\r\n  };\r\n}\r\n\r\nfunction asyncToggleVoteThread(threadId) {\r\n  return async (dispatch, getState) => {\r\n    dispatch(showLoading());\r\n    const { authUser } = getState();\r\n    dispatch(toggleVoteThreadActionCreator({ threadId, userId: authUser.id }));\r\n\r\n    try {\r\n      await api.toggleVoteThread(threadId);\r\n    } catch (error) {\r\n      alert(error.messagge);\r\n      dispatch(toggleVoteThreadActionCreator({ threadId, userId: authUser.id }));\r\n    }\r\n    dispatch(hideLoading());\r\n  };\r\n}\r\n\r\nexport {\r\n  ActionType,\r\n  receiveThreadsActionCreator,\r\n  addThreadActionCreator,\r\n  toggleVoteThreadActionCreator,\r\n  asyncAddThread,\r\n  asyncToggleVoteThread,\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAClE,OAAOC,GAAG,MAAM,iBAAiB;AAEjC,MAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,iBAAiB;EAClCC,UAAU,EAAE,YAAY;EACxBC,kBAAkB,EAAE;AACtB,CAAC;AAED,SAASC,2BAA2B,CAACC,OAAO,EAAE;EAC5C,OAAO;IACLC,IAAI,EAAEN,UAAU,CAACC,eAAe;IAChCM,OAAO,EAAE;MACPF;IACF;EACF,CAAC;AACH;AAEA,SAASG,sBAAsB,CAACC,MAAM,EAAE;EACtC,OAAO;IACLH,IAAI,EAAEN,UAAU,CAACE,UAAU;IAC3BK,OAAO,EAAE;MACPE;IACF;EACF,CAAC;AACH;AAEA,SAASC,6BAA6B,OAAuB;EAAA,IAAtB;IAAEC,QAAQ;IAAEC;EAAO,CAAC;EACzD,OAAO;IACLN,IAAI,EAAEN,UAAU,CAACG,kBAAkB;IACnCI,OAAO,EAAE;MACPI,QAAQ;MACRC;IACF;EACF,CAAC;AACH;AAEA,SAASC,cAAc,QAAkB;EAAA,IAAjB;IAAEC,KAAK;IAAEC;EAAK,CAAC;EACrC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAAClB,WAAW,EAAE,CAAC;IACvB,IAAI;MACF,MAAMW,MAAM,GAAG,MAAMV,GAAG,CAACkB,YAAY,CAAC;QAAEH,KAAK;QAAEC;MAAK,CAAC,CAAC;MACtDC,QAAQ,CAACR,sBAAsB,CAACC,MAAM,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAAC;IACvB;IACAJ,QAAQ,CAACnB,WAAW,EAAE,CAAC;EACzB,CAAC;AACH;AAEA,SAASwB,qBAAqB,CAACV,QAAQ,EAAE;EACvC,OAAO,OAAOK,QAAQ,EAAEM,QAAQ,KAAK;IACnCN,QAAQ,CAAClB,WAAW,EAAE,CAAC;IACvB,MAAM;MAAEyB;IAAS,CAAC,GAAGD,QAAQ,EAAE;IAC/BN,QAAQ,CAACN,6BAA6B,CAAC;MAAEC,QAAQ;MAAEC,MAAM,EAAEW,QAAQ,CAACC;IAAG,CAAC,CAAC,CAAC;IAE1E,IAAI;MACF,MAAMzB,GAAG,CAAC0B,gBAAgB,CAACd,QAAQ,CAAC;IACtC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAAC;MACrBJ,QAAQ,CAACN,6BAA6B,CAAC;QAAEC,QAAQ;QAAEC,MAAM,EAAEW,QAAQ,CAACC;MAAG,CAAC,CAAC,CAAC;IAC5E;IACAR,QAAQ,CAACnB,WAAW,EAAE,CAAC;EACzB,CAAC;AACH;AAEA,SACEG,UAAU,EACVI,2BAA2B,EAC3BI,sBAAsB,EACtBE,6BAA6B,EAC7BG,cAAc,EACdQ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}