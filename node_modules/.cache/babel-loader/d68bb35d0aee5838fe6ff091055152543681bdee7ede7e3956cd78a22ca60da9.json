{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tin\\\\redux\\\\src\\\\components\\\\ThreadCommentItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport parse from 'html-react-parser';\nimport { postedAt } from '../utils';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  replace: domNode => {\n    if (domNode.attribs && domNode.attribs.class === 'remove') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" \"\n      }, void 0, false);\n    }\n  }\n};\nfunction ThreadCommentItem(_ref) {\n  let {\n    content,\n    createdAt,\n    owner\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: owner.avatar,\n          alt: `${owner.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: owner.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: postedAt(createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: parse(content, options)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ThreadCommentItem;\nconst ownerCommentItemShape = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired\n};\nconst threadCommentItemShape = {\n  id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  owner: PropTypes.shape(ownerCommentItemShape).isRequired,\n  upVotesBy: PropTypes.arrayOf(PropTypes.string).isRequired,\n  downVotesBy: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nThreadCommentItem.propTypes = {\n  ...threadCommentItemShape\n};\nexport { threadCommentItemShape };\nexport default ThreadCommentItem;\nvar _c;\n$RefreshReg$(_c, \"ThreadCommentItem\");","map":{"version":3,"names":["React","PropTypes","parse","postedAt","options","replace","domNode","attribs","class","ThreadCommentItem","content","createdAt","owner","avatar","name","ownerCommentItemShape","id","string","isRequired","threadCommentItemShape","shape","upVotesBy","arrayOf","downVotesBy","propTypes"],"sources":["C:/Users/Tin/redux/src/components/ThreadCommentItem.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport parse from 'html-react-parser';\r\nimport { postedAt } from '../utils';\r\n\r\nconst options = {\r\n  replace: (domNode) => {\r\n    if (domNode.attribs && domNode.attribs.class === 'remove') {\r\n      return <> </>;\r\n    }\r\n  },\r\n};\r\n\r\nfunction ThreadCommentItem({ content, createdAt, owner }) {\r\n  return (\r\n    <section>\r\n      <div>\r\n        <div>\r\n          <img src={owner.avatar} alt={`${owner.name}`} />\r\n        </div>\r\n        <div>\r\n          <header>\r\n            <div>\r\n              <h5>{owner.name}</h5>\r\n              <p>{postedAt(createdAt)}</p>\r\n            </div>\r\n          </header>\r\n          <article>\r\n            <p>{parse(content, options)}</p>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst ownerCommentItemShape = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n};\r\n\r\nconst threadCommentItemShape = {\r\n  id: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  createdAt: PropTypes.string.isRequired,\r\n  owner: PropTypes.shape(ownerCommentItemShape).isRequired,\r\n  upVotesBy: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  downVotesBy: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nThreadCommentItem.propTypes = {\r\n  ...threadCommentItemShape,\r\n};\r\n\r\nexport { threadCommentItemShape };\r\n\r\nexport default ThreadCommentItem;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,QAAQ,UAAU;AAAC;AAAA;AAEpC,MAAMC,OAAO,GAAG;EACdC,OAAO,EAAGC,OAAO,IAAK;IACpB,IAAIA,OAAO,CAACC,OAAO,IAAID,OAAO,CAACC,OAAO,CAACC,KAAK,KAAK,QAAQ,EAAE;MACzD,oBAAO;QAAA;MAAA,iBAAM;IACf;EACF;AACF,CAAC;AAED,SAASC,iBAAiB,OAAgC;EAAA,IAA/B;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAM,CAAC;EACtD,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,uBACE;UAAK,GAAG,EAAEA,KAAK,CAACC,MAAO;UAAC,GAAG,EAAG,GAAED,KAAK,CAACE,IAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC5C,eACN;QAAA,wBACE;UAAA,uBACE;YAAA,wBACE;cAAA,UAAKF,KAAK,CAACE;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACrB;cAAA,UAAIX,QAAQ,CAACQ,SAAS;YAAC;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACxB;UAAA;UAAA;UAAA;QAAA,QACC,eACT;UAAA,uBACE;YAAA,UAAIT,KAAK,CAACQ,OAAO,EAAEN,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QACxB;MAAA;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,KArBQK,iBAAiB;AAuB1B,MAAMM,qBAAqB,GAAG;EAC5BC,EAAE,EAAEf,SAAS,CAACgB,MAAM,CAACC,UAAU;EAC/BJ,IAAI,EAAEb,SAAS,CAACgB,MAAM,CAACC,UAAU;EACjCL,MAAM,EAAEZ,SAAS,CAACgB,MAAM,CAACC;AAC3B,CAAC;AAED,MAAMC,sBAAsB,GAAG;EAC7BH,EAAE,EAAEf,SAAS,CAACgB,MAAM,CAACC,UAAU;EAC/BR,OAAO,EAAET,SAAS,CAACgB,MAAM,CAACC,UAAU;EACpCP,SAAS,EAAEV,SAAS,CAACgB,MAAM,CAACC,UAAU;EACtCN,KAAK,EAAEX,SAAS,CAACmB,KAAK,CAACL,qBAAqB,CAAC,CAACG,UAAU;EACxDG,SAAS,EAAEpB,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACgB,MAAM,CAAC,CAACC,UAAU;EACzDK,WAAW,EAAEtB,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACgB,MAAM,CAAC,CAACC;AACnD,CAAC;AAEDT,iBAAiB,CAACe,SAAS,GAAG;EAC5B,GAAGL;AACL,CAAC;AAED,SAASA,sBAAsB;AAE/B,eAAeV,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}